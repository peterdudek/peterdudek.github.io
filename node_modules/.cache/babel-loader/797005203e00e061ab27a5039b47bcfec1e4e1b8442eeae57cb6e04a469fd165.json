{"ast":null,"code":"var _jsxFileName = \"/Users/piotrdudek/development-2024/peterdudek.github.io/src/Components/Typed.js\";\nimport React from \"react\";\nimport Typed from \"typed.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass TypedReactDemo extends React.Component {\n  componentDidMount() {\n    // If you want to pass more options as props, simply add\n    // your desired props to this destructuring assignment.\n    const {\n      strings\n    } = this.props;\n    // You can pass other options here, such as typing speed, back speed, etc.\n    const options = {\n      strings: strings,\n      typeSpeed: 70,\n      backSpeed: 70,\n      smartBackspace: true,\n      // shuffle: true,\n      loop: true,\n      loopCount: Infinity\n    };\n    // this.el refers to the <span> in the render() method\n    this.typed = new Typed(this.el, options);\n  }\n  componentWillUnmount() {\n    // Make sure to destroy Typed instance on unmounting\n    // to prevent memory leaks\n    this.typed.destroy();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap margy\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"type-wrap largeFont\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            whiteSpace: 'pre'\n          },\n          ref: el => {\n            this.el = el;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default TypedReactDemo;","map":{"version":3,"names":["React","Typed","jsxDEV","_jsxDEV","TypedReactDemo","Component","componentDidMount","strings","props","options","typeSpeed","backSpeed","smartBackspace","loop","loopCount","Infinity","typed","el","componentWillUnmount","destroy","render","className","children","style","whiteSpace","ref","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/piotrdudek/development-2024/peterdudek.github.io/src/Components/Typed.js"],"sourcesContent":["import React from \"react\";\nimport Typed from \"typed.js\";\n\nclass TypedReactDemo extends React.Component {\n  componentDidMount() {\n    // If you want to pass more options as props, simply add\n    // your desired props to this destructuring assignment.\n    const { strings } = this.props;\n    // You can pass other options here, such as typing speed, back speed, etc.\n    const options = {\n      strings: strings,\n      typeSpeed: 70,\n      backSpeed: 70,\n      smartBackspace: true,\n      // shuffle: true,\n      loop: true,\n      loopCount: Infinity,\n    };\n    // this.el refers to the <span> in the render() method\n    this.typed = new Typed(this.el, options);\n  }\n\n  componentWillUnmount() {\n    // Make sure to destroy Typed instance on unmounting\n    // to prevent memory leaks\n    this.typed.destroy();\n  }\n\n  render() {\n    return (\n      <div className=\"wrap margy\">\n        {/* <h1>About me</h1> */}\n        <div className=\"type-wrap largeFont\">\n          <span\n            style={{ whiteSpace: 'pre' }}\n            ref={(el) => { this.el = el; }}\n          />\n        </div>\n        {/* <button onClick={() => this.typed.toggle()}>Toggle</button>\n        <button onClick={() => this.typed.start()}>Start</button>\n        <button onClick={() => this.typed.stop()}>Stop</button>\n        <button onClick={() => this.typed.reset()}>Reset</button>\n        <button onClick={() => this.typed.destroy()}>Destroy</button> */}\n      </div>\n    );\n  }\n}\n\nexport default TypedReactDemo;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,cAAc,SAASJ,KAAK,CAACK,SAAS,CAAC;EAC3CC,iBAAiBA,CAAA,EAAG;IAClB;IACA;IACA,MAAM;MAAEC;IAAQ,CAAC,GAAG,IAAI,CAACC,KAAK;IAC9B;IACA,MAAMC,OAAO,GAAG;MACdF,OAAO,EAAEA,OAAO;MAChBG,SAAS,EAAE,EAAE;MACbC,SAAS,EAAE,EAAE;MACbC,cAAc,EAAE,IAAI;MACpB;MACAC,IAAI,EAAE,IAAI;MACVC,SAAS,EAAEC;IACb,CAAC;IACD;IACA,IAAI,CAACC,KAAK,GAAG,IAAIf,KAAK,CAAC,IAAI,CAACgB,EAAE,EAAER,OAAO,CAAC;EAC1C;EAEAS,oBAAoBA,CAAA,EAAG;IACrB;IACA;IACA,IAAI,CAACF,KAAK,CAACG,OAAO,CAAC,CAAC;EACtB;EAEAC,MAAMA,CAAA,EAAG;IACP,oBACEjB,OAAA;MAAKkB,SAAS,EAAC,YAAY;MAAAC,QAAA,eAEzBnB,OAAA;QAAKkB,SAAS,EAAC,qBAAqB;QAAAC,QAAA,eAClCnB,OAAA;UACEoB,KAAK,EAAE;YAAEC,UAAU,EAAE;UAAM,CAAE;UAC7BC,GAAG,EAAGR,EAAE,IAAK;YAAE,IAAI,CAACA,EAAE,GAAGA,EAAE;UAAE;QAAE;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMH,CAAC;EAEV;AACF;AAEA,eAAezB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}